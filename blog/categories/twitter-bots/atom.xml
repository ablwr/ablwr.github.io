<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: twitter bots | BLOG Progress Process]]></title>
  <link href="http://ablwr.github.io/blog/categories/twitter-bots/atom.xml" rel="self"/>
  <link href="http://ablwr.github.io/"/>
  <updated>2014-06-28T20:51:29-04:00</updated>
  <id>http://ablwr.github.io/</id>
  <author>
    <name><![CDATA[Ashley Blewer]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Twitter Bots 3: Keeping your bot alive]]></title>
    <link href="http://ablwr.github.io/blog/2014/06/28/twitter-bots-3-keeping-your-bot-alive/"/>
    <updated>2014-06-28T20:31:52-04:00</updated>
    <id>http://ablwr.github.io/blog/2014/06/28/twitter-bots-3-keeping-your-bot-alive</id>
    <content type="html"><![CDATA[<blockquote class="twitter-tweet" data-partner="tweetdeck"><p><a href="https://twitter.com/wetted_ashes">@wetted_ashes</a> <a href="https://twitter.com/ablwr">@ablwr</a> Just spent too much time coding and having so many excellent things to read thanks to <a href="https://twitter.com/hashtag/timezones?src=hash">#timezones</a></p>&mdash; ¡ɹǝʍǝlq ʎǝlɥs∀ (@ablwr_ebooks) <a href="https://twitter.com/ablwr_ebooks/statuses/478713633023602688">June 17, 2014</a></blockquote>


<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>Once a Twitter bot has been configured, it has to stay running in order to stay alive. And for that, it needs a server. When I was debugging my bot, I was running it off of my computer and got notifications of activity in my terminal. This works if I want my bot to only be active when I am active, but I want my bot to be available all day and night!</p>

<p>The most logical way to do that would be to deploy my bot&rsquo;s code to a Heroku instance. It&rsquo;s free and super easy, especially if you already have a good grasp on git workflows. Basically you just have to&hellip;</p>

<p><code>
git init
git add .
git commit -m "BOTS"
</code>
then,
<code>
heroku create
git push heroku master
</code></p>

<p>That&rsquo;s it! That is it. Actually, that is not it, because I had to log onto the heroku web interface and adjust the Dynos worker to 1 instead of 0.</p>

<p><img class="left" src="/images/heroku_dynos_twitterbot.png" width="350" height="350" title="&lsquo;image&rsquo; &lsquo;images&rsquo;" ></p>

<p> But after that, my bot was again operational and back to her normal (myself)
self.</p>

<blockquote class="twitter-tweet" data-partner="tweetdeck"><p><a href="https://twitter.com/trlwagner">@trlwagner</a> I just wish I had to deal with GoDaddy but I am right now so my day is pretty good.</p>&mdash; ¡ɹǝʍǝlq ʎǝlɥs∀ (@ablwr_ebooks) <a href="https://twitter.com/ablwr_ebooks/statuses/478713189480153088">June 17, 2014</a></blockquote>


<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Twitter Bots 2: Authorizing the Bot]]></title>
    <link href="http://ablwr.github.io/blog/2014/06/25/twitter-bots-2-authorizing-the-bot/"/>
    <updated>2014-06-25T12:54:34-04:00</updated>
    <id>http://ablwr.github.io/blog/2014/06/25/twitter-bots-2-authorizing-the-bot</id>
    <content type="html"><![CDATA[<p>For me, the hardest part of getting a Twitter bot up and running was negotiating with Twitter&rsquo;s API keys and application settings. The primary reason for this was probably that I kept getting overly excited and jumping ahead, trying to finish the project too soon. I first set up an app by registering my primary twitter account. Turns out that wasn&rsquo;t necessary at all, and I could access and download my tweets just by using <a href="https://github.com/marcel/twurl">twurl</a> to collect authenticate and grab my main account&rsquo;s twitter archive. I THINK. Those authentication details went into a hidden file, .ebooksrc, in my computer&rsquo;s main user directory. I know because I had to break into it several times and switch out the keys in order to get it to work, but most users shouldn&rsquo;t need to open it again, once it&rsquo;s in there.</p>

<p>To get the bot operational, I had to create an dev account and app using my bot&rsquo;s twitter account (oh yeah, I also had to register a new twitter account &mdash; but that&rsquo;s obvious, right? I&rsquo;m not talking to a bot, I&rsquo;m talking to a human&hellip; right?)</p>

<p>Under My Applications (next to my user profile), I created a new app. Under the API Keys tab, I generated some access tokens. The consumer and OAuth details can then be added to the bot&rsquo;s bots.rb file, along with the bot&rsquo;s username and the bot model (in my case, my main twitter account).</p>

<p><code>
CONSUMER_KEY = ""
CONSUMER_SECRET = ""
</code></p>

<p>```
  Ebooks::Bot.new(&ldquo;&rdquo;) do |bot| # Ebooks account username
  bot.oauth_token = &ldquo;&rdquo; # oauth token for ebooks account
  bot.oauth_token_secret = &ldquo;&rdquo; # oauth secret for ebooks account</p>

<p>  make_bot(bot, &ldquo;&rdquo;) # This should be the name of the text model generated from the base twitter account</p>

<p>```</p>

<p>Sounds easy, but I had such a hard time! Writing it all up, I am embarassed that it took me so many tries to get it right. My problem was that I first thought that the CONSUMER_KEY fields needed to come from my main twitter account instead of from the bot&rsquo;s account. Then, I changed the CONSUMER_KEY details but also changed the info in the .ebooksrc file. Then, I changed them both around again but didn&rsquo;t refresh my OAuth token.</p>

<p>The final step was that my bot was running but unable to do anything because the API Keys permission access level was set to read-only. It is not super-clear in the documentation, but the account generating the access token has to have a valid phone number associated with it in order to get granted permission for read/write/execute status. After confirming with a phone number, my bot was able to talk to people and generate its own tweets based on my model.</p>

<p>A final important debugging note: After changing the permission access level from read-only to read/write, you will probably have to regenerate the API keys and add the new codes to the app.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The bots are coming! Twitter bots!]]></title>
    <link href="http://ablwr.github.io/blog/2014/06/24/twitter-bots/"/>
    <updated>2014-06-24T23:10:17-04:00</updated>
    <id>http://ablwr.github.io/blog/2014/06/24/twitter-bots</id>
    <content type="html"><![CDATA[<p>When I accepted a spot in the Flatiron School Ruby005 class, I knew my social life and, uh, casual internet-browsing life (?) would be cut dramatically down while I would be focusing all of my efforts on learning Ruby. I didn&rsquo;t want my friends to miss me too much (which is hard, since I also had to move from South Carolina to New York), so I decided to build a twitter bot that could tweet and talk to my friends.</p>

<p>Fortunately, there&rsquo;s already a Ruby gem that does all of the work for me. So I didn&rsquo;t really have to build a bot, I could just launch one! I used the gem found <a href="https://github.com/mispy/twitter_ebooks">here</a> and pulled in the example bot&rsquo;s code. When I got stuck, I referenced <a href="https://github.com/ScaryEnderman/Twitter-Bots-Tutorial">this bot tutorial</a>. Setting up the bot and modifying the code was easy, but I hit a few snags trying to cooperate with the Twitter app API and OAuth.</p>

<p>Here&rsquo;s how the twitter_ebooks gem works.</p>

<ol>
<li>The gem pulls in your twitter history in json format.</li>
<li>Then, it parses through the json data and identifies words and phrases according to grammatical structure.</li>
<li>It randomly generates sentences based on a user&rsquo;s tweet history. A cron job is set up to tweet randomly once a day, but I bumped that up to once an hour.</li>
<li>It knows how to respond to other users when they tweet at the bot.</li>
<li>It has a keyword list and will favorite or retweet tweets in its timeline that use those keywords.</li>
</ol>


<p>Here are a few examples of what my bot has to say:</p>

<blockquote class="twitter-tweet" lang="en"><p>CSS is in this instance, or is, at minimum, I&#39;ll take 6.</p>&mdash; ¡ɹǝʍǝlq ʎǝlɥs∀ (@ablwr_ebooks) <a href="https://twitter.com/ablwr_ebooks/statuses/481632877323354112">June 25, 2014</a></blockquote>


<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>




<blockquote class="twitter-tweet" lang="en"><p>...Damn it, iPhone, I hate it when you get a job at a grocery store.</p>&mdash; ¡ɹǝʍǝlq ʎǝlɥs∀ (@ablwr_ebooks) <a href="https://twitter.com/ablwr_ebooks/statuses/480258821844377600">June 21, 2014</a></blockquote>


<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>




<blockquote class="twitter-tweet" lang="en"><p>Tumblr adding fake film grain, tulips, u-matic tape players, cleaning my ears with a q-tip, maps...</p>&mdash; ¡ɹǝʍǝlq ʎǝlɥs∀ (@ablwr_ebooks) <a href="https://twitter.com/ablwr_ebooks/statuses/479307552946421762">June 18, 2014</a></blockquote>


<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>But the best part of having a Twitter bot is that it can interact with other users! Classmate <a href="http://randallreedjr.com/">Randall</a> asked her for some advice:</p>

<blockquote class="twitter-tweet" lang="en"><p><a href="https://twitter.com/ablwr_ebooks">@ablwr_ebooks</a> What should I do this weekend?</p>&mdash; Randall Reed Jr. (@randallocalypse) <a href="https://twitter.com/randallocalypse/statuses/480034237391704064">June 20, 2014</a></blockquote>


<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>


<blockquote class="twitter-tweet" data-partner="tweetdeck"><p><a href="https://twitter.com/randallocalypse">@randallocalypse</a> I hope this suggests a return of the insane hotels.</p>&mdash; ¡ɹǝʍǝlq ʎǝlɥs∀ (@ablwr_ebooks) <a href="https://twitter.com/ablwr_ebooks/statuses/480034319030026240">June 20, 2014</a></blockquote>


<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>That&rsquo;s my bot! Have your bot add my bot at <a href="http://www.twitter.com/ablwr_ebooks">@ablwr_ebooks</a>. Stay tuned for some more technical blog posts about working through the Twitter authentication steps, understanding CRON, modifying a bot, deploying to heroku, and ~mad science experiments~.</p>
]]></content>
  </entry>
  
</feed>
